|Integer scalar variables|
# x;
# x, y;

|One-dimensional arrays of integers|
|for array of size 10|
#10# x;
|to access element with index of 1|
x#1#;

|Assignment statements|
x = 10;

|Arithmetic operators (e.g., “+”, “-”, “*”, “/”)|
x add y; |+|
x sub y; |-|
x pro y; |*|
x div y; |/|
x mod y; |%|

x = (x add y) sub z;

|Relational operators (e.g., “<”, “==”, “>”, “!=”)|
x lt y; |<|
x eq y; |==|
x gt y; |>|
x ne y; |!=|
x leq y; |<=|
x geq y; |>=|

x and y; |&&|
x or y; | || |

(x lt y) and (x gt z);

|While or Do-While loops|
when [x]:
|do whatever|;
;

|Break statement|
stop;

|If-then-else statements|
?[(x add y) eq 4]:
do whatever;
>[(x add y) eq 3]:
do whatever2;
>[1]:
;

|Read and write statements|
ain(x);
aout(x);

|Comments|
|comment|

|Functions (that can take multiple scalar arguments and return a single scalar result)|
# myfunction(parameters):
function body;
return(x);
;
|returning an integer|

# myfunction2(parameters):
function body;
return();
;
|returning nothing|